#include<cstdio>#include<cmath>char map[101][101] = {   "###############",   "#   # #       #",   "#  @  #   #   #",   "#  #########  #",   "#  #    #  #  #",   "#  #       #  #",   "#  #  #   ##  #",   "#  #  #     # #",   "#  #     #  # #",   "#  #    $#    #",   "#             #",   "###############",};int min=9999999;char mapf[101][101];int count =	10;void print(char map[101][101]) {    for (int i = 0; i < 12; ++i) {        puts(map[i]);    }}void rec(int y, int x, int dep) {    if (dep > 20)return;    if (map[y][x] == '$' ) {        if (dep < min) {            min = dep;        }        return;    }    if (map[y][x] != '#' && map[y][x] != '.') {        map[y][x] = '.';        rec(y + 1, x, dep + 1);        rec(y, x + 1, dep + 1);        rec(y, x - 1, dep + 1);        rec(y - 1, x, dep + 1);        map[y][x] = ' ';    }}int main() {    printf("%i\n",rand()%21+2);    /*for (int i = 0; i < 12; ++i) {        puts(map[i]);    }    int y1 = 0, x1 = 0, y2 = 0, x2 = 0;    for (int i = 0; i < 12; ++i) {        for (int j = 0; j < 15; j++) {            mapf[i][j] = map[i][j];            if (map[i][j] == '@')y1 = i, x1 = j;            else                if (map[i][j] == '$')y2 = i, x2 = j;        }    }    min = 9999;    while(y1!=y2||x1!=x2){        rec(y1-1, x1, 0);        int len = min;        char dir='u';        min = 9999;        rec(y1+1, x1, 0);        if (len > min)len = min,dir='d';        min = 9999;        rec(y1, x1+1, 0);        if (len > min)len = min, dir = 'r';        min = 9999;        rec(y1, x1-1, 0);        if (len > min)len = min, dir = 'l';        switch (dir){            case 'u': {                map[y1][x1] = ' ';                map[--y1][x1] = '@';                break;            }            case 'd': {                map[y1][x1] = ' ';                map[++y1][x1] = '@';                break;            }            case 'r': {                map[y1][x1] = ' ';                map[y1][++x1] = '@';                break;            }            case 'l': {                map[y1][x1] = ' ';                map[y1][--x1] = '@';                break;            }            default:                break;        }        print(map);    }*/}